
---
events:
  -
    kind: "message-v1"
    backtrace:
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake:205 (message)"
      - "CMakeLists.txt:3 (project)"
    message: |
      The system is: Windows - 10.0.22631 - AMD64
  -
    kind: "message-v1"
    backtrace:
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
      Compiler:  
      Build flags: -DQT_QML_DEBUG
      Id flags:  
      
      The output was:
      0
      閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.10.4+10fbfbf2e
      鐢熸垚鍚姩鏃堕棿涓?2025/3/14 15:08:20銆?
      
      鑺傜偣 1 涓婄殑椤圭洰鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\3.31.6\\CompilerIdCXX\\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)銆?
      PrepareForBuild:
        姝ｅ湪鍒涘缓鐩綍鈥淒ebug\\鈥濄€?
        宸插惎鐢ㄧ粨鏋勫寲杈撳嚭銆傜紪璇戝櫒璇婃柇鐨勬牸寮忚缃皢鍙嶆槧閿欒灞傛缁撴瀯銆傛湁鍏宠缁嗕俊鎭紝璇峰弬闃?https://aka.ms/cpp/structured-output銆?
        姝ｅ湪鍒涘缓鐩綍鈥淒ebug\\CompilerIdCXX.tlog\\鈥濄€?
      InitializeBuildStatus:
        姝ｅ湪鍒涘缓鈥淒ebug\\CompilerIdCXX.tlog\\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
        姝ｅ湪瀵光€淒ebug\\CompilerIdCXX.tlog\\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
      ClCompile:
        C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\\\" /Fd"Debug\\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
        CMakeCXXCompilerId.cpp
      Link:
        C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:".\\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\\CompilerIdCXX.lib" /MACHINE:X64 Debug\\CMakeCXXCompilerId.obj
        CompilerIdCXX.vcxproj -> H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\3.31.6\\CompilerIdCXX\\CompilerIdCXX.exe
      PostBuildEvent:
        for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
        :VCEnd
        CMAKE_CXX_COMPILER=C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\Hostx64\\x64\\cl.exe
      FinalizeBuildStatus:
        姝ｅ湪鍒犻櫎鏂囦欢鈥淒ebug\\CompilerIdCXX.tlog\\unsuccessfulbuild鈥濄€?
        姝ｅ湪瀵光€淒ebug\\CompilerIdCXX.tlog\\CompilerIdCXX.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
      宸插畬鎴愮敓鎴愰」鐩€淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\3.31.6\\CompilerIdCXX\\CompilerIdCXX.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?
      
      宸叉垚鍔熺敓鎴愩€?
          0 涓鍛?
          0 涓敊璇?
      
      宸茬敤鏃堕棿 00:00:01.75
      
      
      Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.exe"
      
      Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.vcxproj"
      
      The CXX compiler identification is MSVC, found in:
        H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/3.31.6/CompilerIdCXX/CompilerIdCXX.exe
      
  -
    kind: "try_compile-v1"
    backtrace:
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake:74 (try_compile)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:3 (project)"
    checks:
      - "Detecting CXX compiler ABI info"
    directories:
      source: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-5zh330"
      binary: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-5zh330"
    cmakeVariables:
      CMAKE_CXX_FLAGS: "-DQT_QML_DEBUG"
      CMAKE_CXX_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_CXX_SCAN_FOR_MODULES: "OFF"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
    buildResult:
      variable: "CMAKE_CXX_ABI_COMPILED"
      cached: true
      stdout: |
        Change Dir: 'H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-5zh330'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_a77b8.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.10.4+10fbfbf2e
        鐢熸垚鍚姩鏃堕棿涓?2025/3/14 15:08:22銆?
        
        鑺傜偣 1 涓婄殑椤圭洰鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-5zh330\\cmTC_a77b8.vcxproj鈥?榛樿鐩爣)銆?
        PrepareForBuild:
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_a77b8.dir\\Debug\\鈥濄€?
          宸插惎鐢ㄧ粨鏋勫寲杈撳嚭銆傜紪璇戝櫒璇婃柇鐨勬牸寮忚缃皢鍙嶆槧閿欒灞傛缁撴瀯銆傛湁鍏宠缁嗕俊鎭紝璇峰弬闃?https://aka.ms/cpp/structured-output銆?
          姝ｅ湪鍒涘缓鐩綍鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-5zh330\\Debug\\鈥濄€?
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_a77b8.dir\\Debug\\cmTC_a77b8.tlog\\鈥濄€?
        InitializeBuildStatus:
          姝ｅ湪鍒涘缓鈥渃mTC_a77b8.dir\\Debug\\cmTC_a77b8.tlog\\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
          姝ｅ湪瀵光€渃mTC_a77b8.dir\\Debug\\cmTC_a77b8.tlog\\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
        ClCompile:
          C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_a77b8.dir\\Debug\\\\" /Fd"cmTC_a77b8.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Tool\\CMake-3.31.6\\share\\cmake-3.31\\Modules\\CMakeCXXCompilerABI.cpp"
          鐢ㄤ簬 x64 鐨?Microsoft (R) C/C++ 浼樺寲缂栬瘧鍣?19.40.33811 鐗?
          鐗堟潈鎵€鏈?C) Microsoft Corporation銆備繚鐣欐墍鏈夋潈鍒┿€?
          cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_a77b8.dir\\Debug\\\\" /Fd"cmTC_a77b8.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Tool\\CMake-3.31.6\\share\\cmake-3.31\\Modules\\CMakeCXXCompilerABI.cpp"
          CMakeCXXCompilerABI.cpp
        Link:
          C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-5zh330\\Debug\\cmTC_a77b8.exe" /INCREMENTAL /ILK:"cmTC_a77b8.dir\\Debug\\cmTC_a77b8.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-5zh330/Debug/cmTC_a77b8.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-5zh330/Debug/cmTC_a77b8.lib" /MACHINE:X64  /machine:x64 cmTC_a77b8.dir\\Debug\\CMakeCXXCompilerABI.obj
          cmTC_a77b8.vcxproj -> H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-5zh330\\Debug\\cmTC_a77b8.exe
        FinalizeBuildStatus:
          姝ｅ湪鍒犻櫎鏂囦欢鈥渃mTC_a77b8.dir\\Debug\\cmTC_a77b8.tlog\\unsuccessfulbuild鈥濄€?
          姝ｅ湪瀵光€渃mTC_a77b8.dir\\Debug\\cmTC_a77b8.tlog\\cmTC_a77b8.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
        宸插畬鎴愮敓鎴愰」鐩€淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-5zh330\\cmTC_a77b8.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?
        
        宸叉垚鍔熺敓鎴愩€?
            0 涓鍛?
            0 涓敊璇?
        
        宸茬敤鏃堕棿 00:00:00.47
        
      exitCode: 0
  -
    kind: "message-v1"
    backtrace:
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake:218 (message)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Parsed CXX implicit link information:
        link line regex: [^( *|.*[/\\])(ld[0-9]*(\\.[a-z]+)?|link\\.exe|lld-link(\\.exe)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(\\.[a-z]+)?|link\\.exe|lld-link(\\.exe)?))("|,| |$)]
        linker tool for 'CXX': C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/14.40.33807/bin/HostX64/x64/link.exe
        implicit libs: []
        implicit objs: []
        implicit dirs: []
        implicit fwks: []
      
      
  -
    kind: "message-v1"
    backtrace:
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake:40 (message)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake:255 (cmake_determine_linker_id)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Running the CXX compiler's linker: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/14.40.33807/bin/HostX64/x64/link.exe" "-v"
      Microsoft (R) Incremental Linker Version 14.40.33811.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
  -
    kind: "try_compile-v1"
    backtrace:
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake:108 (try_compile)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CheckCXXSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/FindThreads.cmake:99 (CHECK_CXX_SOURCE_COMPILES)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/FindThreads.cmake:163 (_threads_check_libc)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake:76 (find_package)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/QtPublicDependencyHelpers.cmake:36 (find_dependency)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/Qt6Dependencies.cmake:34 (_qt_internal_find_third_party_dependencies)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/Qt6Config.cmake:161 (include)"
      - "CMakeLists.txt:12 (find_package)"
    checks:
      - "Performing Test CMAKE_HAVE_LIBC_PTHREAD"
    directories:
      source: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-jnivm7"
      binary: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-jnivm7"
    cmakeVariables:
      CMAKE_CXX_FLAGS: "-DQT_QML_DEBUG"
      CMAKE_CXX_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/kwin"
    buildResult:
      variable: "CMAKE_HAVE_LIBC_PTHREAD"
      cached: true
      stdout: |
        Change Dir: 'H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-jnivm7'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_3bc92.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.10.4+10fbfbf2e
        鐢熸垚鍚姩鏃堕棿涓?2025/3/14 15:08:22銆?
        
        鑺傜偣 1 涓婄殑椤圭洰鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\cmTC_3bc92.vcxproj鈥?榛樿鐩爣)銆?
        PrepareForBuild:
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_3bc92.dir\\Debug\\鈥濄€?
          宸插惎鐢ㄧ粨鏋勫寲杈撳嚭銆傜紪璇戝櫒璇婃柇鐨勬牸寮忚缃皢鍙嶆槧閿欒灞傛缁撴瀯銆傛湁鍏宠缁嗕俊鎭紝璇峰弬闃?https://aka.ms/cpp/structured-output銆?
          姝ｅ湪鍒涘缓鐩綍鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\Debug\\鈥濄€?
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_3bc92.dir\\Debug\\cmTC_3bc92.tlog\\鈥濄€?
        InitializeBuildStatus:
          姝ｅ湪鍒涘缓鈥渃mTC_3bc92.dir\\Debug\\cmTC_3bc92.tlog\\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
          姝ｅ湪瀵光€渃mTC_3bc92.dir\\Debug\\cmTC_3bc92.tlog\\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
        ClCompile:
          C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D CMAKE_HAVE_LIBC_PTHREAD /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /std:c++17 /Fo"cmTC_3bc92.dir\\Debug\\\\" /Fd"cmTC_3bc92.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\src.cxx"
          鐢ㄤ簬 x64 鐨?Microsoft (R) C/C++ 浼樺寲缂栬瘧鍣?19.40.33811 鐗?
          鐗堟潈鎵€鏈?C) Microsoft Corporation銆備繚鐣欐墍鏈夋潈鍒┿€?
          cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D CMAKE_HAVE_LIBC_PTHREAD /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /std:c++17 /Fo"cmTC_3bc92.dir\\Debug\\\\" /Fd"cmTC_3bc92.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\src.cxx"
          src.cxx
        H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\src.cxx(1,10): error C1083: 鏃犳硶鎵撳紑鍖呮嫭鏂囦欢: 鈥減thread.h鈥? No such file or directory [H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\cmTC_3bc92.vcxproj]
        宸插畬鎴愮敓鎴愰」鐩€淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\cmTC_3bc92.vcxproj鈥?榛樿鐩爣)鐨勬搷浣?- 澶辫触銆?
        
        鐢熸垚澶辫触銆?
        
        鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\cmTC_3bc92.vcxproj鈥?榛樿鐩爣) (1) ->
        (ClCompile 鐩爣) -> 
          H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\src.cxx(1,10): error C1083: 鏃犳硶鎵撳紑鍖呮嫭鏂囦欢: 鈥減thread.h鈥? No such file or directory [H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-jnivm7\\cmTC_3bc92.vcxproj]
        
            0 涓鍛?
            1 涓敊璇?
        
        宸茬敤鏃堕棿 00:00:00.31
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CheckLibraryExists.cmake:78 (try_compile)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/FindThreads.cmake:112 (CHECK_LIBRARY_EXISTS)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/FindThreads.cmake:175 (_threads_check_lib)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake:76 (find_package)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/QtPublicDependencyHelpers.cmake:36 (find_dependency)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/Qt6Dependencies.cmake:34 (_qt_internal_find_third_party_dependencies)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/Qt6Config.cmake:161 (include)"
      - "CMakeLists.txt:12 (find_package)"
    checks:
      - "Looking for pthread_create in pthreads"
    directories:
      source: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-xcm6wa"
      binary: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-xcm6wa"
    cmakeVariables:
      CMAKE_CXX_FLAGS: "-DQT_QML_DEBUG"
      CMAKE_CXX_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/kwin"
    buildResult:
      variable: "CMAKE_HAVE_PTHREADS_CREATE"
      cached: true
      stdout: |
        Change Dir: 'H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-xcm6wa'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_c116c.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.10.4+10fbfbf2e
        鐢熸垚鍚姩鏃堕棿涓?2025/3/14 15:08:23銆?
        
        鑺傜偣 1 涓婄殑椤圭洰鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-xcm6wa\\cmTC_c116c.vcxproj鈥?榛樿鐩爣)銆?
        PrepareForBuild:
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_c116c.dir\\Debug\\鈥濄€?
          宸插惎鐢ㄧ粨鏋勫寲杈撳嚭銆傜紪璇戝櫒璇婃柇鐨勬牸寮忚缃皢鍙嶆槧閿欒灞傛缁撴瀯銆傛湁鍏宠缁嗕俊鎭紝璇峰弬闃?https://aka.ms/cpp/structured-output銆?
          姝ｅ湪鍒涘缓鐩綍鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-xcm6wa\\Debug\\鈥濄€?
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_c116c.dir\\Debug\\cmTC_c116c.tlog\\鈥濄€?
        InitializeBuildStatus:
          姝ｅ湪鍒涘缓鈥渃mTC_c116c.dir\\Debug\\cmTC_c116c.tlog\\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
          姝ｅ湪瀵光€渃mTC_c116c.dir\\Debug\\cmTC_c116c.tlog\\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
        ClCompile:
          C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D CHECK_FUNCTION_EXISTS=pthread_create /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /std:c++17 /Fo"cmTC_c116c.dir\\Debug\\\\" /Fd"cmTC_c116c.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-xcm6wa\\CheckFunctionExists.cxx"
          鐢ㄤ簬 x64 鐨?Microsoft (R) C/C++ 浼樺寲缂栬瘧鍣?19.40.33811 鐗?
          鐗堟潈鎵€鏈?C) Microsoft Corporation銆備繚鐣欐墍鏈夋潈鍒┿€?
          cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D CHECK_FUNCTION_EXISTS=pthread_create /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /std:c++17 /Fo"cmTC_c116c.dir\\Debug\\\\" /Fd"cmTC_c116c.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-xcm6wa\\CheckFunctionExists.cxx"
          CheckFunctionExists.cxx
        Link:
          C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-xcm6wa\\Debug\\cmTC_c116c.exe" /INCREMENTAL /ILK:"cmTC_c116c.dir\\Debug\\cmTC_c116c.ilk" /NOLOGO pthreads.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-xcm6wa/Debug/cmTC_c116c.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-xcm6wa/Debug/cmTC_c116c.lib" /MACHINE:X64  /machine:x64 cmTC_c116c.dir\\Debug\\CheckFunctionExists.obj
        LINK : fatal error LNK1104: 鏃犳硶鎵撳紑鏂囦欢鈥減threads.lib鈥?[H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-xcm6wa\\cmTC_c116c.vcxproj]
        宸插畬鎴愮敓鎴愰」鐩€淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-xcm6wa\\cmTC_c116c.vcxproj鈥?榛樿鐩爣)鐨勬搷浣?- 澶辫触銆?
        
        鐢熸垚澶辫触銆?
        
        鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-xcm6wa\\cmTC_c116c.vcxproj鈥?榛樿鐩爣) (1) ->
        (Link 鐩爣) -> 
          LINK : fatal error LNK1104: 鏃犳硶鎵撳紑鏂囦欢鈥減threads.lib鈥?[H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-xcm6wa\\cmTC_c116c.vcxproj]
        
            0 涓鍛?
            1 涓敊璇?
        
        宸茬敤鏃堕棿 00:00:00.36
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CheckLibraryExists.cmake:78 (try_compile)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/FindThreads.cmake:112 (CHECK_LIBRARY_EXISTS)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/FindThreads.cmake:176 (_threads_check_lib)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake:76 (find_package)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/QtPublicDependencyHelpers.cmake:36 (find_dependency)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/Qt6Dependencies.cmake:34 (_qt_internal_find_third_party_dependencies)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/Qt6Config.cmake:161 (include)"
      - "CMakeLists.txt:12 (find_package)"
    checks:
      - "Looking for pthread_create in pthread"
    directories:
      source: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-h72hg7"
      binary: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-h72hg7"
    cmakeVariables:
      CMAKE_CXX_FLAGS: "-DQT_QML_DEBUG"
      CMAKE_CXX_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/kwin"
    buildResult:
      variable: "CMAKE_HAVE_PTHREAD_CREATE"
      cached: true
      stdout: |
        Change Dir: 'H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-h72hg7'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_fddaa.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.10.4+10fbfbf2e
        鐢熸垚鍚姩鏃堕棿涓?2025/3/14 15:08:24銆?
        
        鑺傜偣 1 涓婄殑椤圭洰鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-h72hg7\\cmTC_fddaa.vcxproj鈥?榛樿鐩爣)銆?
        PrepareForBuild:
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_fddaa.dir\\Debug\\鈥濄€?
          宸插惎鐢ㄧ粨鏋勫寲杈撳嚭銆傜紪璇戝櫒璇婃柇鐨勬牸寮忚缃皢鍙嶆槧閿欒灞傛缁撴瀯銆傛湁鍏宠缁嗕俊鎭紝璇峰弬闃?https://aka.ms/cpp/structured-output銆?
          姝ｅ湪鍒涘缓鐩綍鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-h72hg7\\Debug\\鈥濄€?
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_fddaa.dir\\Debug\\cmTC_fddaa.tlog\\鈥濄€?
        InitializeBuildStatus:
          姝ｅ湪鍒涘缓鈥渃mTC_fddaa.dir\\Debug\\cmTC_fddaa.tlog\\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
          姝ｅ湪瀵光€渃mTC_fddaa.dir\\Debug\\cmTC_fddaa.tlog\\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
        ClCompile:
          C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D CHECK_FUNCTION_EXISTS=pthread_create /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /std:c++17 /Fo"cmTC_fddaa.dir\\Debug\\\\" /Fd"cmTC_fddaa.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-h72hg7\\CheckFunctionExists.cxx"
          鐢ㄤ簬 x64 鐨?Microsoft (R) C/C++ 浼樺寲缂栬瘧鍣?19.40.33811 鐗?
          鐗堟潈鎵€鏈?C) Microsoft Corporation銆備繚鐣欐墍鏈夋潈鍒┿€?
          cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D CHECK_FUNCTION_EXISTS=pthread_create /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /std:c++17 /Fo"cmTC_fddaa.dir\\Debug\\\\" /Fd"cmTC_fddaa.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-h72hg7\\CheckFunctionExists.cxx"
          CheckFunctionExists.cxx
        Link:
          C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-h72hg7\\Debug\\cmTC_fddaa.exe" /INCREMENTAL /ILK:"cmTC_fddaa.dir\\Debug\\cmTC_fddaa.ilk" /NOLOGO pthread.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-h72hg7/Debug/cmTC_fddaa.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-h72hg7/Debug/cmTC_fddaa.lib" /MACHINE:X64  /machine:x64 cmTC_fddaa.dir\\Debug\\CheckFunctionExists.obj
        LINK : fatal error LNK1104: 鏃犳硶鎵撳紑鏂囦欢鈥減thread.lib鈥?[H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-h72hg7\\cmTC_fddaa.vcxproj]
        宸插畬鎴愮敓鎴愰」鐩€淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-h72hg7\\cmTC_fddaa.vcxproj鈥?榛樿鐩爣)鐨勬搷浣?- 澶辫触銆?
        
        鐢熸垚澶辫触銆?
        
        鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-h72hg7\\cmTC_fddaa.vcxproj鈥?榛樿鐩爣) (1) ->
        (Link 鐩爣) -> 
          LINK : fatal error LNK1104: 鏃犳硶鎵撳紑鏂囦欢鈥減thread.lib鈥?[H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-h72hg7\\cmTC_fddaa.vcxproj]
        
            0 涓鍛?
            1 涓敊璇?
        
        宸茬敤鏃堕棿 00:00:00.37
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake:108 (try_compile)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CheckCXXSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/FindWrapAtomic.cmake:36 (check_cxx_source_compiles)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake:76 (find_package)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/QtPublicDependencyHelpers.cmake:36 (find_dependency)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6Core/Qt6CoreDependencies.cmake:35 (_qt_internal_find_third_party_dependencies)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6Core/Qt6CoreConfig.cmake:42 (include)"
      - "H:/Tool/CMake-3.31.6/share/cmake-3.31/Modules/CMakeFindDependencyMacro.cmake:76 (find_package)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/QtPublicDependencyHelpers.cmake:145 (find_dependency)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6Widgets/Qt6WidgetsDependencies.cmake:45 (_qt_internal_find_qt_dependencies)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6Widgets/Qt6WidgetsConfig.cmake:40 (include)"
      - "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/Qt6Config.cmake:206 (find_package)"
      - "CMakeLists.txt:13 (find_package)"
    checks:
      - "Performing Test HAVE_STDATOMIC"
    directories:
      source: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-tnikja"
      binary: "H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-tnikja"
    cmakeVariables:
      CMAKE_CXX_FLAGS: "-DQT_QML_DEBUG"
      CMAKE_CXX_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/kwin;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;H:/Tool/Qt/6.10.0/msvc2022_64/lib/cmake/Qt6/3rdparty/kwin"
    buildResult:
      variable: "HAVE_STDATOMIC"
      cached: true
      stdout: |
        Change Dir: 'H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-tnikja'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_04354.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        閫傜敤浜?.NET Framework MSBuild 鐗堟湰 17.10.4+10fbfbf2e
        鐢熸垚鍚姩鏃堕棿涓?2025/3/14 15:08:24銆?
        
        鑺傜偣 1 涓婄殑椤圭洰鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-tnikja\\cmTC_04354.vcxproj鈥?榛樿鐩爣)銆?
        PrepareForBuild:
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_04354.dir\\Debug\\鈥濄€?
          宸插惎鐢ㄧ粨鏋勫寲杈撳嚭銆傜紪璇戝櫒璇婃柇鐨勬牸寮忚缃皢鍙嶆槧閿欒灞傛缁撴瀯銆傛湁鍏宠缁嗕俊鎭紝璇峰弬闃?https://aka.ms/cpp/structured-output銆?
          姝ｅ湪鍒涘缓鐩綍鈥淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-tnikja\\Debug\\鈥濄€?
          姝ｅ湪鍒涘缓鐩綍鈥渃mTC_04354.dir\\Debug\\cmTC_04354.tlog\\鈥濄€?
        InitializeBuildStatus:
          姝ｅ湪鍒涘缓鈥渃mTC_04354.dir\\Debug\\cmTC_04354.tlog\\unsuccessfulbuild鈥濓紝鍥犱负宸叉寚瀹氣€淎lwaysCreate鈥濄€?
          姝ｅ湪瀵光€渃mTC_04354.dir\\Debug\\cmTC_04354.tlog\\unsuccessfulbuild鈥濇墽琛?Touch 浠诲姟銆?
        ClCompile:
          C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D HAVE_STDATOMIC /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /std:c++17 /Fo"cmTC_04354.dir\\Debug\\\\" /Fd"cmTC_04354.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-tnikja\\src.cxx"
          鐢ㄤ簬 x64 鐨?Microsoft (R) C/C++ 浼樺寲缂栬瘧鍣?19.40.33811 鐗?
          鐗堟潈鎵€鏈?C) Microsoft Corporation銆備繚鐣欐墍鏈夋潈鍒┿€?
          cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D QT_QML_DEBUG /D HAVE_STDATOMIC /D "CMAKE_INTDIR=\\"Debug\\"" /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /std:c++17 /Fo"cmTC_04354.dir\\Debug\\\\" /Fd"cmTC_04354.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-tnikja\\src.cxx"
          src.cxx
        Link:
          C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.40.33807\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-tnikja\\Debug\\cmTC_04354.exe" /INCREMENTAL /ILK:"cmTC_04354.dir\\Debug\\cmTC_04354.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-tnikja/Debug/cmTC_04354.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"H:/Code/CT_MRI_Demo/CT_MRI_Demo/CMakeFiles/CMakeScratch/TryCompile-tnikja/Debug/cmTC_04354.lib" /MACHINE:X64  /machine:x64 cmTC_04354.dir\\Debug\\src.obj
          cmTC_04354.vcxproj -> H:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-tnikja\\Debug\\cmTC_04354.exe
        FinalizeBuildStatus:
          姝ｅ湪鍒犻櫎鏂囦欢鈥渃mTC_04354.dir\\Debug\\cmTC_04354.tlog\\unsuccessfulbuild鈥濄€?
          姝ｅ湪瀵光€渃mTC_04354.dir\\Debug\\cmTC_04354.tlog\\cmTC_04354.lastbuildstate鈥濇墽琛?Touch 浠诲姟銆?
        宸插畬鎴愮敓鎴愰」鐩€淗:\\Code\\CT_MRI_Demo\\CT_MRI_Demo\\CMakeFiles\\CMakeScratch\\TryCompile-tnikja\\cmTC_04354.vcxproj鈥?榛樿鐩爣)鐨勬搷浣溿€?
        
        宸叉垚鍔熺敓鎴愩€?
            0 涓鍛?
            0 涓敊璇?
        
        宸茬敤鏃堕棿 00:00:00.52
        
      exitCode: 0
...
